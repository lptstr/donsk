#!/bin/bash

# mksite - a simple script to build a site

# Load configuration
source ./config

name="donsk"
html1='<!DOCTYPE html><html lang=en><head><link href="'
html2="\" rel=icon type=\"image/png\"><title>${site_name}</title><meta name=viewport content=\"width=device-width\"><style>"
html3='</style>'
html4='</head><body><main>{{content}}</main></body></html>'

template="${html1}${favicon}${html2}${style}${html3}${headers}${html4}"

if [[ -z $1 ]]; then
    rm -rf _website
    printf "[${name}] cleaning out _website/*\n"
fi

mkdir -p _website/images
mkdir -p _website/blog

for md in _content/*.md; do
    file_name=${md##*/}
    printf "[${name}] processing markdown file ${md}\n"

    [[ $file_name != index.md ]] &&
        home="<a href='/'>Home</a>"


    minify --type html \
        <<< "${template/'{{content}}'/${home}$(pandoc "$md")}" \
        > "_website/${file_name/%.md/.html}"

    home=
done

ctr=0
until [[ $ctr -eq "${#folders[@]}" ]]; do
    printf "[${name}] preparing to process folder ${folders[$ctr]}\n"
    let ctr+=1
done

ctr=0
until [[ $ctr -eq "${#folders[@]}" ]]; do
    folder="${folders[$ctr]}"
    if [[ ! -d "_website/$folder" ]]; then
        mkdir -p "_website/$folder"
    fi
    
    for md in "_content/${folder}"/*.md; do
        file_name=${md##*/}
        printf "[${name}] processing markdown file ${md} in directory ${folder}\n"

        home="<a href='/'>Home</a>"

        minify --type html \
            <<< "${template/'{{content}}'/${home}$(pandoc "$md")}" \
            > "_website/$folder/${file_name/%.md/.html}"

        home=
    done
    let ctr+=1
done

for md in _content/_posts/*.md; do
    file_name=${md##*/}
    printf "[${name}] processing markdown post ${md}\n"

    home="<a href='/'>Home</a>"

    minify --type html \
        <<< "${template/'{{content}}'/${home}$(pandoc "$md")}" \
        > "_website/blog/${file_name/%.md/.html}"

    home=
done


[[ $1 ]] &&
    exit

cd _website/images || exit

png_flags=(--speed 1 --skip-if-larger --strip -f --verbose --output)

for img in ../../_content/_images/*.{jpg,png}; do (
    file_name=${img##*/}
    suffix=${file_name/*.}
    
    printf "[${name}] processing image ${img}\n"
    x2=${file_name/%.${suffix}/-2x.${suffix}}

    convert "$img" -resize 600x\>  "$file_name"
    convert "$img" -resize 1200x\> "$x2"

    case $suffix in
        jpg) jpegoptim -s "$file_name" "$x2" ;;
        png)
            pngquant "$file_name" "${png_flags[@]}" "$file_name"
            pngquant "$x2" "${png_flags[@]}" "$x2"
        ;;
    esac

    img2webp -lossy -q 90 "$file_name" -o "${file_name%.${suffix}}.webp"
    img2webp -lossy -q 90 "$x2" -o "${x2%.${suffix}}.webp"
) & done

cd ../..

for file in _content/_files/*; do (
  printf "[${name}] moving static file $file to _site/\n"
  cp -r "$file" _website/
) & done

wait
